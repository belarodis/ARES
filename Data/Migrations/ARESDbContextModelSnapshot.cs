// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ARESDbContext))]
    partial class ARESDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("DataAdmissao")
                        .HasColumnType("date");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigComputadores")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QtdComputadores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("Notebook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataAquisicao")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NPatrimonio")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("NPatrimonio")
                        .IsUnique();

                    b.ToTable("Notebooks");
                });

            modelBuilder.Entity("ReservaLaboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataReserva")
                        .HasColumnType("date");

                    b.Property<int>("FkFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("FkLaboratorio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkFuncionario");

                    b.HasIndex("FkLaboratorio");

                    b.ToTable("ReservaLaboratorios");
                });

            modelBuilder.Entity("ReservaNotebook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataReserva")
                        .HasColumnType("date");

                    b.Property<int>("FkFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("FkNotebook")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkFuncionario");

                    b.HasIndex("FkNotebook");

                    b.ToTable("ReservaNotebooks");
                });

            modelBuilder.Entity("ReservaSala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataReserva")
                        .HasColumnType("date");

                    b.Property<int>("FkFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("FkSala")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkFuncionario");

                    b.HasIndex("FkSala");

                    b.ToTable("ReservaSalas");
                });

            modelBuilder.Entity("Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumeroSala")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("TemProjetor")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("ReservaLaboratorio", b =>
                {
                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany("ReservasLaboratorio")
                        .HasForeignKey("FkFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laboratorio", "Laboratorio")
                        .WithMany("Reservas")
                        .HasForeignKey("FkLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("ReservaNotebook", b =>
                {
                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany("ReservasNotebook")
                        .HasForeignKey("FkFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notebook", "Notebook")
                        .WithMany("Reservas")
                        .HasForeignKey("FkNotebook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Notebook");
                });

            modelBuilder.Entity("ReservaSala", b =>
                {
                    b.HasOne("Domain.Funcionario", "Funcionario")
                        .WithMany("ReservasSala")
                        .HasForeignKey("FkFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sala", "Sala")
                        .WithMany("Reservas")
                        .HasForeignKey("FkSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Domain.Funcionario", b =>
                {
                    b.Navigation("ReservasLaboratorio");

                    b.Navigation("ReservasNotebook");

                    b.Navigation("ReservasSala");
                });

            modelBuilder.Entity("Laboratorio", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Notebook", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Sala", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
